function TechDescription(tag) {
  const dataTech = tag.attributes["0"].nodeValue;
  let description = "";

  switch (dataTech) {
    case "nodejs":
      document.getElementById("nodejs").style.visibility = "initial";

      description = `NodeJS √© um ambiente de execu√ß√£o javascript server-side,
      que possibilita a cria√ß√£o de aplica√ß√µes ass√≠ncronas orientadas a eventos,
      permitindo grande escalabilidade.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "typescript":
      document.getElementById("typescript").style.visibility = "initial";

      description = `TypeScript √© um superconjunto de JavaScript, tornando-se
      uma ferramenta com formas eficientes de codificar e adicionando recursos
      n√£o presentes nativamente.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "expressjs":
      document.getElementById("expressjs").style.visibility = "initial";

      description = `Express √© um framework r√°pido e o mais popular para criar e
      estruturar aplica√ß√µes em Nodejs de forma f√°cil e limpa.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "html":
      document.getElementById("html").style.visibility = "initial";

      description = `HTML (HyperText Markup Language) √© uma linguagem baseada em
      marca√ß√£o, onde marcamos elementos para definir suas informa√ß√µes e
      estruturar p√°ginas web.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "css":
      document.getElementById("css").style.visibility = "initial";

      description = `CSS (Cascading Style Sheets) √© uma linguagem de cria√ß√£o de
      estilos, que combinada com HTML, define qual ser√° a apar√™ncia de uma
      p√°gina web.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "javascript":
      document.getElementById("javascript").style.visibility = "initial";

      description = `JavaScript √© uma linguagem de programa√ß√£o interpretada
      estruturada, de script em alto n√≠vel com tipagem din√¢mica fraca e multiparadigma.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "nestjs":
      document.getElementById("nestjs").style.visibility = "initial";

      description = `NestJS √© um framework open source destinado ao
      desenvolvimento de aplica√ß√µes server-side que traz efici√™ncia e
      escalabilidade ao processo.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "graphql":
      document.getElementById("graphql").style.visibility = "initial";

      description = `<p>GraphQL <i>(Graph Query Language)</i> √© uma linguagem de consulta
      utilizada para a manipula√ß√£o de dados em APIs, que auxilia no retorno de
      informa√ß√µes espec√≠ficas e nada mais üéØ.</p>`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "api":
      document.getElementById("api").style.visibility = "initial";

      description = `<p>API <i>(Application Programming Interface)</i> √© um
      conjunto de normas que possibilitam a comunica√ß√£o entre plataformas
      atrav√©s de uma s√©rie de padr√µes e protocolos.</p>`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "git":
      document.getElementById("git").style.visibility = "initial";

      description = `Git √© o sistema de controle de vers√£o open source mais
      usado no mundo atualmente, que auxilia no gerenciamento de altera√ß√µes em
      c√≥digo fonte.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "jest":
      document.getElementById("jest").style.visibility = "initial";

      description = `Jest √© um framework de testes para JavaScript projetado
      para garantir a corre√ß√£o de qualquer c√≥digo JavaScript.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "csharp":
      document.getElementById("csharp").style.visibility = "initial";

      description = `C# √© uma linguagem de programa√ß√£o, multiparadigma, de
      tipagem forte, sendo a principal da plataforma .NET.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "docker":
      document.getElementById("docker").style.visibility = "initial";

      description = `Docker √© uma tecnologia de conteineriza√ß√£o open source
      usada para empacotar, entregar e executar aplica√ß√µes em containers Linux.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "postgresql":
      document.getElementById("postgresql").style.visibility = "initial";

      description = `PostgreSQL √© um banco de dados relacional de software livre
      com suporte de 30 anos de desenvolvimento, sendo um dos bancos de dados
      relacionais mais estabelecidos dispon√≠veis.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "sqlserver":
      document.getElementById("sqlserver").style.visibility = "initial";

      description = `Microsoft SQL Server √© um sistema gerenciador de Banco de
      dados relacional desenvolvido e mantido pela Microsoft.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "typeorm":
      document.getElementById("typeorm").style.visibility = "initial";

      description = `<p>TypeORM √© um ORM <i>(object-relational mapper)</i> que
      facilita a vincula√ß√£o de seu aplicativo TypeScript a um banco de dados de
      banco de dados relacional ou n√£o relacional.`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    case "prisma":
      document.getElementById("prisma").style.visibility = "initial";

      description = `<p>Prisma √© um ORM <i>(object-relational mapper)</i> com
      uma abordagem diferente de classes e decoradores, focando em um √∫nico
      arquvio chamado <b>schema</b>.</p>`;
      document.getElementById("describeSkill").innerHTML = description;
      break;

    default:
      break;
  }
}

function ClearDescription() {
  const defaultDescription = "Passe o cursor do mouse para ler.";
  document.getElementById("describeSkill").innerHTML = defaultDescription;

  document.querySelectorAll("label").forEach((tag) => {
    if (tag.attributes["0"].name != "id") return;

    const elementID = tag.attributes["0"].nodeValue;
    document.getElementById(elementID).style.visibility = "hidden";
  });
}
